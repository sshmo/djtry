exclude: 'migrations|manage.py'
default_stages: [commit]
fail_fast: true

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    - id: check-yaml
    - id: check-merge-conflict
      name: Check that merge conflicts are not being committed
    - id: debug-statements
      name: Detect accidentally committed debug statements
    - id: check-builtin-literals
      name: Require literal syntax when initializing Python builtin types
    - id: detect-private-key
      name: Detect if private key is added to the repository
    - id: end-of-file-fixer
      name: Make sure that there is an empty line at the end
    - id: mixed-line-ending
      name: Detect if mixed line ending is used (\r vs. \r\n)
    - id: trailing-whitespace
      name: Remove trailing whitespace at end of line
    - id: fix-encoding-pragma
      name: Remove encoding header from Python files
      args:
        - --remove

  - repo: meta
    hooks:
    - id: check-hooks-apply
    - id: check-useless-excludes

  - repo: https://github.com/ikamensh/flynt
    rev: '0.77'
    hooks:
      - id: flynt
        name: Run flynt string format converter for Python
        args:
         # If flynt detects too long text it ignores it. So we set a very large limit to make it easy
         # to split the text by hand. Too long lines are detected by flake8 (below),
         # so the user is informed to take action.
         - --line-length
         - '99999'

  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.2
    hooks:
      - id: codespell
        name: Run codespell to check for common misspellings in files
        language: python
        types: [text]

  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
    - id: black
      types: [python]

  - repo: https://github.com/timothycrosley/isort
    rev: 5.12.0
    hooks:
      - id: isort
        types: [python]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: 'v0.0.269'
    hooks:
      - id: ruff

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        additional_dependencies: [flake8-isort, Flake8-pyproject]

  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        additional_dependencies: [".[toml]"]
        args: [--convention=google]

  - repo:  https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
    -   id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: [".[toml]"]

  - repo: https://github.com/rubik/xenon
    rev: v0.9.0
    hooks:
      - id: xenon
        args: [ --max-absolute B, --max-modules A, --max-average A ]

  - repo: local
    hooks:
      - id: pylint
        name: pylint
        entry: pylint
        language: python
        types: [python]
        additional_dependencies: [
          'Django==4.2.2',
          'pylint==2.17.3',
          'pylint_django==2.5.3',
          'pytest==7.3.1',
          ]
        require_serial: true
        args:
          [
            "-rn", # Only display messages
            "-sn", # Don't display the score
            "--load-plugins=pylint_django",
            "--rcfile=pyproject.toml", # Link to your config file
            "--ignore-paths=tests"
          ]
        files: djtry|blog
