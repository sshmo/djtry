{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to djtry","text":"<p>This site contains the project documentation for the <code>djtry</code> project.</p>"},{"location":"#table-of-contents","title":"Table Of Contents","text":"<p>The documentation consists of two separate parts:</p> <ol> <li>Usage</li> <li>Reference</li> </ol> <p>Quickly find what you're looking for depending on your use case by looking at the different pages.</p>"},{"location":"#project-overview","title":"Project Overview","text":"<p>djtry modile.</p>"},{"location":"tutorials/","title":"Usage","text":"<p>First download the code from djtry GitHub repository:</p> <pre><code>    git clone git@github.com:sshmo/djtry.git\n    cd djtry\n</code></pre> <p>To run app:</p> <pre><code>    python manage.py makemigrations blog\n    python manage.py migrate\n    python manage.py runserver\n</code></pre> <p>For creating superuser:</p> <pre><code>    python manage.py createsuperuser\n</code></pre>"},{"location":"reference/","title":"djtry","text":"<p>Blog module.</p>"},{"location":"reference/admin/","title":"Admin","text":"<p>Admin module.</p>"},{"location":"reference/apps/","title":"Apps","text":"<p>App module.</p>"},{"location":"reference/apps/#blog.apps.BlogConfig","title":"<code>BlogConfig</code>","text":"<p>         Bases: <code>AppConfig</code></p> <p>Blog configs.</p> Source code in <code>blog/apps.py</code> <pre><code>class BlogConfig(AppConfig):\n\"\"\"Blog configs.\"\"\"\n\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"blog\"\n</code></pre>"},{"location":"reference/asgi/","title":"Asgi","text":"<p>ASGI config for ditry project.</p> <p>It exposes the ASGI callable as a module-level variable named <code>application</code>.</p> <p>For more information on this file, see https://docs.djangoproject.com/en/4.2/howto/deployment/asgi/</p>"},{"location":"reference/models/","title":"Models","text":"<p>Models for blog app.</p>"},{"location":"reference/models/#blog.models.Post","title":"<code>Post</code>","text":"<p>         Bases: <code>models.Model</code></p> <p>Post class.</p> <p>Attributes:</p> Name Type Description <code>author</code> <code>ForeignKey</code> <p>author of the post.</p> <code>title</code> <code>CharField</code> <p>title of the post.</p> <code>text</code> <code>TextField</code> <p>post content.</p> <code>created_date</code> <code>DateTimeField</code> <p>date of post creation.</p> <code>published_date</code> <code>DateTimeField</code> <p>date of post publication.</p> Source code in <code>blog/models.py</code> <pre><code>class Post(models.Model):\n\"\"\"Post class.\n\n    Attributes:\n        author: author of the post.\n        title: title of the post.\n        text: post content.\n        created_date: date of post creation.\n        published_date: date of post publication.\n    \"\"\"\n\n    author: ForeignKey = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n    title: CharField = models.CharField(max_length=200)\n    text: TextField = models.TextField()\n    created_date: DateTimeField = models.DateTimeField(default=timezone.now)\n    published_date: DateTimeField = models.DateTimeField(blank=True, null=True)\n\n    def publish(self):\n\"\"\"Add published_date to post.\"\"\"\n        self.published_date = timezone.now()\n        self.save()\n\n    def __str__(self):\n\"\"\"Post representation.\"\"\"\n        return self.title\n</code></pre>"},{"location":"reference/models/#blog.models.Post.__str__","title":"<code>__str__()</code>","text":"<p>Post representation.</p> Source code in <code>blog/models.py</code> <pre><code>def __str__(self):\n\"\"\"Post representation.\"\"\"\n    return self.title\n</code></pre>"},{"location":"reference/models/#blog.models.Post.publish","title":"<code>publish()</code>","text":"<p>Add published_date to post.</p> Source code in <code>blog/models.py</code> <pre><code>def publish(self):\n\"\"\"Add published_date to post.\"\"\"\n    self.published_date = timezone.now()\n    self.save()\n</code></pre>"},{"location":"reference/settings/","title":"Settings","text":"<p>Django settings for djtry project.</p> <p>Generated by 'django-admin startproject' using Django 4.2.2.</p> <p>For more information on this file, see https://docs.djangoproject.com/en/4.2/topics/settings/</p> <p>For the full list of settings and their values, see https://docs.djangoproject.com/en/4.2/ref/settings/</p>"},{"location":"reference/urls/","title":"Urls","text":"<p>URL configuration for ditry project.</p> <p>The <code>urlpatterns</code> list routes URLs to views. For more information please see:     https://docs.djangoproject.com/en/4.2/topics/http/urls/</p> <p>Examples:</p> <p>Function views     1. Add an import:  from my_app import views     2. Add a URL to urlpatterns:  path('', views.home, name='home') Class-based views     1. Add an import:  from other_app.views import Home     2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home') Including another URLconf     1. Import the include() function: from django.urls import include, path     2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))</p>"},{"location":"reference/views/","title":"Views","text":"<p>Views module.</p>"},{"location":"reference/wsgi/","title":"Wsgi","text":"<p>WSGI config for ditry project.</p> <p>It exposes the WSGI callable as a module-level variable named <code>application</code>.</p> <p>For more information on this file, see https://docs.djangoproject.com/en/4.2/howto/deployment/wsgi/</p>"},{"location":"reference/migrations/","title":"Migrations","text":""},{"location":"reference/migrations/0001_initial/","title":"0001 initial","text":""}]}